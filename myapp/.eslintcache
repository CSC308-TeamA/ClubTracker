[{"/Users/tammychau/school/csc308/TeamProject/myapp/src/index.js":"1","/Users/tammychau/school/csc308/TeamProject/myapp/src/reportWebVitals.js":"2","/Users/tammychau/school/csc308/TeamProject/myapp/src/App.js":"3","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/ResourcesPage.js":"4","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/ContactPage.js":"5","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/HomePage.js":"6","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/AboutPage.js":"7","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/Calendar.js":"8","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/SponsorPage.js":"9","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/FirstPage.js":"10","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/PicturePage.js":"11","/Users/tammychau/school/csc308/TeamProject/myapp/src/components/NavigationBar.js":"12","/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Footer.js":"13","/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Layout.js":"14","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/OutreachPage.js":"15","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/TeamRoster.js":"16","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/LoginPage.js":"17","/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Jumbotron.js":"18","/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Carousel.js":"19","/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Table.js":"20","/Users/tammychau/school/csc308/TeamProject/myapp/src/components/AddUserForm.js":"21","/Users/tammychau/school/csc308/TeamProject/myapp/src/components/FilterForm.js":"22","/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Roster.js":"23"},{"size":543,"mtime":1613522570307,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1612376800527,"results":"26","hashOfConfig":"25"},{"size":1808,"mtime":1613522570299,"results":"27","hashOfConfig":"25"},{"size":1964,"mtime":1613522570313,"results":"28","hashOfConfig":"25"},{"size":443,"mtime":1612922247730,"results":"29","hashOfConfig":"25"},{"size":7514,"mtime":1613522570310,"results":"30","hashOfConfig":"25"},{"size":328,"mtime":1613522570308,"results":"31","hashOfConfig":"25"},{"size":452,"mtime":1613522570308,"results":"32","hashOfConfig":"25"},{"size":318,"mtime":1612922247731,"results":"33","hashOfConfig":"25"},{"size":1951,"mtime":1613522570309,"results":"34","hashOfConfig":"25"},{"size":1389,"mtime":1613522570311,"results":"35","hashOfConfig":"25"},{"size":1415,"mtime":1613522570305,"results":"36","hashOfConfig":"25"},{"size":867,"mtime":1613522570303,"results":"37","hashOfConfig":"25"},{"size":159,"mtime":1612376800525,"results":"38","hashOfConfig":"25"},{"size":1960,"mtime":1613522570311,"results":"39","hashOfConfig":"25"},{"size":2446,"mtime":1614817729038,"results":"40","hashOfConfig":"25"},{"size":1015,"mtime":1614789372555,"results":"41","hashOfConfig":"25"},{"size":431,"mtime":1613522570303,"results":"42","hashOfConfig":"25"},{"size":1288,"mtime":1613522570302,"results":"43","hashOfConfig":"25"},{"size":1342,"mtime":1613522570306,"results":"44","hashOfConfig":"25"},{"size":6996,"mtime":1615598690248,"results":"45","hashOfConfig":"25"},{"size":3309,"mtime":1615672395537,"results":"46","hashOfConfig":"25"},{"size":1439,"mtime":1615594448866,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"sqfklu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/tammychau/school/csc308/TeamProject/myapp/src/index.js",[],["99","100"],"/Users/tammychau/school/csc308/TeamProject/myapp/src/reportWebVitals.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/App.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/ResourcesPage.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/ContactPage.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/HomePage.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/AboutPage.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/Calendar.js",["101"],"import React from 'react'\nimport { TableCalendar } from '../components/Table';\n\nconst calendarSourceURL = \"https://calendar.google.com/calendar/embed?src=i7jilka7plgl4bhh0sdegsigsk%40group.calendar.google.com&ctz=America%2FLos_Angeles\";\n\nexport const Calendar = () => (\n        <>\n                <iframe src={calendarSourceURL} width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\"> </iframe>\n                <TableCalendar />\n        </>\n        \n)","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/SponsorPage.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/FirstPage.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/PicturePage.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/components/NavigationBar.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Footer.js",["102"],"import \"../styles/footer.styles.scss\";\nimport boatImage from '../assets/logo.PNG';\nimport { Link } from 'react-router-dom';\n\nexport const Footer = () => (\n  <header>\n    <nav className=\"navbar-container\">\n      <div className=\"link-container link-container__left\">\n        <a href=\"https://twitter.com/frc2046?lang=en\">Twitter</a>\n        <a href=\"https://www.instagram.com/bearmetal2046/?hl=en\">Instagram</a>\n        <a href=\"https://www.facebook.com/FRC2046/\">Facebook</a>\n      </div>\n      <img src={boatImage} className=\"logo\" alt=\"logo\" width={100} />\n      <div className=\"link-container link-container__right\">\n        <a href=\"https://twitter.com/frc2046?lang=en\">Twitter</a>\n        <a href=\"https://www.instagram.com/bearmetal2046/?hl=en\">Instagram</a>\n        <a href=\"https://www.facebook.com/FRC2046/\">Facebook</a>\n      </div>\n    </nav>\n  </header>\n)\n","/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Layout.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/OutreachPage.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/TeamRoster.js",["103","104"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row } from 'react-bootstrap'\nimport websiteBanner from '../assets/websiteBanner.jpg'\nimport Form from '../components/FilterForm'\nimport AddUserForm from '../components/AddUserForm'\nimport Roster from '../components/Roster'\nimport styles from '../styles/TeamRoster.module.css'\n\nfunction TeamRoster() {\n  const [characters, setCharacters] = useState([]);\n\n  async function fetch(field) {\n    try {\n      var link = \"http://localhost:5000/teamroster?\"\n      if (field.name !== \"\")\n        link += \"name=\" + field.name + \"&\";\n      if (field.stat !== \"\")\n        link += \"status=\" + field.stat + \"&\";\n      if (field.role !== \"\")\n        link += \"role=\" + field.role + \"&\";\n      if (field.posit !== \"\")\n        link += \"position=\" + field.posit + \"&\";\n      if (field.special !== \"\")\n        link += \"specialization=\" + field.special + \"&\";\n\n      const response = await axios.get(link);\n      return response.data;\n    }\n\n    catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    fetch({\n      name: '',\n      stat: '',\n      role: '',\n      posit: '',\n      special: ''\n    }).then(result => {\n      if (result)\n        setCharacters(result);\n    });\n  }, []);\n\n  function updatePage(field) {\n    console.log(field);\n\n    fetch(field).then(result => {\n      if (result)\n        setCharacters(result);\n    });\n  }\n\n  async function makePostCall(person) {\n    try {\n      const response = await axios.post('http://localhost:5000/teamroster', person);\n      return response;\n    }\n\n    catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  function updateRoster(person) {\n    makePostCall(person).then(result => {\n      if (result && result.status === 201)\n        setCharacters([...characters, result.data]);\n    });\n  }\n\n  return (\n    <div>\n      {/* <div className={ styles.header }>\n        <div className={ styles.headerBanner }>\n          <img src={ websiteBanner } />\n        </div>\n        <div className={ styles.headerAddMember }>\n          <AddUserForm handleSubmit={ updateRoster } />\n        </div>\n      </div> */}\n\n      <div className={styles.banner}>\n        <img src={websiteBanner} />\n      </div>\n\n      <AddUserForm handleSubmit={updateRoster} />\n      <Form handleSubmit={updatePage} />\n      <Roster characterData={characters} />\n    </div>\n  );\n}\n\nexport default TeamRoster;\n","/Users/tammychau/school/csc308/TeamProject/myapp/src/pages/LoginPage.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Jumbotron.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Carousel.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Table.js",[],"/Users/tammychau/school/csc308/TeamProject/myapp/src/components/AddUserForm.js",["105","106","107","108","109"],"import React, { useState } from 'react'\nimport { Accordion, Form, Row, Col, Button, Modal, ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport styles from '../styles/TeamRoster.module.css'\n\nfunction AddUserForm(props) {\n  const [person, setPerson] = useState({\n    name: '',\n    role: '',\n    position: '',\n    specialization: [],\n    email: '',\n    phone_number: '',\n    quote: ''\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    var temp = { ...person };\n\n    if (name != 'specialization') {\n      temp[name] = value;\n    } \n\n    setPerson(temp);\n  }\n\n  const [validated, setValidated] = useState(false);\n\n  function submitForm(event) {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n\n    if (form.checkValidity() === true) {\n      Object.keys(specializations).map(sp => {\n        if (specializations[sp]) {\n          person['specialization'].push(sp)\n        }\n      })\n\n      person['specialization'].sort();\n      props.handleSubmit(person);\n      handleClose();\n    }\n  }\n\n  const [show, setShow] = useState(false);\n\n  function handleClose() {\n    setValidated(false);\n    setShow(false);\n    setPerson({\n      name: '',\n      role: '',\n      position: '',\n      specialization: [],\n      email: '',\n      phone_number: '',\n      quote: ''\n    })\n  }\n\n  function handleShow() {\n    setShow(true);\n  }\n\n  const [radioValue, setRadioValue] = useState('0');\n\n  const roles = [\n    { name: 'Advisor' },\n    { name: 'Officer' },\n    { name: 'Member' }\n  ]\n\n  const [specializations, setSpecializations] = useState({\n    'Design': false,\n    'Fabrication': false,\n    'Electronics': false, \n    'Assembly': false,\n    'Programming': false,\n    'Media': false,\n    'Business': false,\n    'Scouting': false,\n    'Pit Crew': false,\n    'Drive Team': false, \n    'Other': false \n  })\n\n  function handleCheckClick(event) {\n    const { name } = event.target;\n    var temp = { ...specializations };\n\n    temp[name] = !temp[name];\n\n    setSpecializations(temp);\n  }\n\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={handleShow} className={styles.addUserForm}>\n        + Add a Member\n      </Button>\n\n      <Modal size=\"lg\" show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n        <Modal.Header>\n          <Modal.Title>Add a New Member</Modal.Title>\n          <Button variant=\"link\" onClick={handleClose}> X </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <Form noValidate validated={validated} onSubmit={submitForm}>\n            <Form.Group as={Row}>\n              <Form.Label column md=\"3\"> Name </Form.Label>\n              <Col md=\"9\">\n                <Form.Control\n                  required type=\"text\" name=\"name\" id=\"name\"\n                  value={person.name} placeholder=\"Name\"\n                  onChange={handleChange} />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please enter a name.\n                </Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column md=\"3\"> Email </Form.Label>\n              <Col md=\"9\">\n                <Form.Control\n                  required type=\"email\" name=\"email\" id=\"email\"\n                  value={person.email} placeholder=\"email@email.com\"\n                  onChange={handleChange} />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please enter an email.\n                </Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column md=\"3\"> Phone Number </Form.Label>\n              <Col md=\"9\">\n                <Form.Control\n                  required type=\"text\" name=\"phone_number\" id=\"phone_number\"\n                  value={person.phone_number} placeholder=\"555-555-5555\"\n                  onChange={handleChange} />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please enter a phone number.\n                </Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column md=\"3\"> Role </Form.Label>\n              <Col md=\"9\">\n                {roles.map((radio, index) => (\n                  <Form.Check\n                    required key={index} inline label={radio.name}\n                    type=\"radio\" name=\"role\" id={`radio${index}`}\n                    value={radio.name} checked={radioValue === radio.name}\n                    onChange={(e) => {\n                      setRadioValue(e.currentTarget.value);\n                      handleChange(e);\n                    }}>\n                  </Form.Check>\n                ))}\n                <Form.Control.Feedback type=\"invalid\">\n                  Please select a role.\n                </Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column md=\"3\"> Position </Form.Label>\n              <Col md=\"9\">\n                <Form.Control\n                  required type=\"text\" name=\"position\" id=\"position\"\n                  value={person.position} placeholder=\"Member\"\n                  onChange={handleChange} />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please enter a position.\n                </Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column md=\"3\"> Specialization </Form.Label>\n              <Col md=\"9\">\n                {Object.keys(specializations).map((checkbox, index) => (\n                  <Form.Check\n                    key={index} inline label={checkbox}\n                    type=\"checkbox\" name={checkbox} id={`checkbox${index}`}\n                    value={checkbox} checked={specializations[checkbox]}\n                    onChange={handleCheckClick}>\n                  </Form.Check>\n                ))}\n                {/* <Form.Control\n                  type=\"text\" name=\"specialization\" id=\"specialization\"\n                  value={person.specialization}\n                  onChange={handleChange} /> */}\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column md=\"3\"> Quote </Form.Label>\n              <Col md=\"9\">\n                <Form.Control\n                  as=\"textarea\" name=\"quote\" id=\"quote\"\n                  value={person.quote} placeholder=\"Throw it back to Stack Attack.\"\n                  rows={3}\n                  onChange={handleChange} />\n              </Col>\n            </Form.Group>\n\n            <div className={styles.addUserFormSumbitButton}>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </div>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n\n}\n\nexport default AddUserForm;\n","/Users/tammychau/school/csc308/TeamProject/myapp/src/components/FilterForm.js",["110"],"/Users/tammychau/school/csc308/TeamProject/myapp/src/components/Roster.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":8,"column":17,"nodeType":"117","endLine":8,"endColumn":105},{"ruleId":"118","severity":1,"message":"119","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"122","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":90,"column":9,"nodeType":"117","endLine":90,"endColumn":36},{"ruleId":"118","severity":1,"message":"125","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":19},{"ruleId":"118","severity":1,"message":"126","line":2,"column":52,"nodeType":"120","messageId":"121","endLine":2,"endColumn":63},{"ruleId":"118","severity":1,"message":"127","line":2,"column":65,"nodeType":"120","messageId":"121","endLine":2,"endColumn":77},{"ruleId":"128","severity":1,"message":"129","line":20,"column":14,"nodeType":"130","messageId":"131","endLine":20,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":40,"column":43,"nodeType":"134","messageId":"135","endLine":40,"endColumn":45},{"ruleId":"118","severity":1,"message":"136","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":16},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Accordion' is defined but never used.","'ButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]